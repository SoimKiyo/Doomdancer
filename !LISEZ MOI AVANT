main.py # Point d'entré principal
game.py # Logique principal du jeu
menu.py # Getsion du menu principal et des parametres 
cinematic.py # Gestion des cinématiques
tutorial.py # Tutoriel interactif avec le compagnon
save_manager.py # Gestion des sauvegardes
player.py # Classe du joueur
companion.py # Classe du compagnon
enemy.py # Classe des ennemies
map.py # Generation procedurale des donjons
ui.py # Interactif utilisateur (HUD)

# Info pratique game design
Deplacement dans le menu avec les joystick possible
quand on arrive au derniere selection du menu on peut pas redescendre pour revenir au depart

B/RL pour la roulade / Espace
X pour recharge / R
Tirer RB / Clique Gauche
Le curseur peut aller n'importe ou et fait bouger la camera
Auto reload

Quand on tourne le joueur sa tourne tout le joueur et l'arme
Quand ou tourne l'arme sa tourne tout sauf la direction

# Roadmap
Semaine 1 : Ajout de toutes les bases
- Sprites
- Map
- Enemies et leur IA + Boss
// - Joueur et ses deplacements
// - Arme et melee
// - Menu
- Systeme de vie et mort/respawn
- Pieces (Fragments de memoire) drop par les ennemies
- Polissage et reorganisation en fin de semaine

Semaine 2 : Ajout des mecaniques complexes
- Systeme de powerup
- Systeme de perfect timing
- Systeme de munition et rechargement (recuperer des munitions via des perfect timming)
- Cinematique de fin et de debut
- Systeme de sauvegarde
- Creation de l'ui
- Polissage et reorganisation en fin de semaine

Semaine 3 : Finalisation
- Shader pour ameliorer les lumieres
- Musiques et SFX
// - Choix du nom et logo
- Documentation et video de showcase
- Cahier des charges
- Testing final et resolutions des bugs + reorganisation/commentaires




////

- Jeu Solo
- 2D
- Roguelite (donc boss a la fin)
- Vue du dessus
- Simple mais propre
- Chill gameplay pas trop de bullet/ennemies
- Ameliorations au respawn
- Futuriste / Fantasique
- Mouvement libre
- Bullet game allégé

- System de (parry)/Perfect timing sur une attaque mélée sur un ennemie, 
le jeu se ralentie (ou s'arrette) et le fond se noirci, le system permet de one shot
et quand on one shot on se fait "propulser" en arriere a la fin et si on rate on se prend
un degat de l'ennemie (Le system est assez rapide en soit pour perfect)

- Une ability de base ou tu peut dash tu peux pas te faire toucher // On le débloque apres le tuto

- La monnaie c'est les morceau de mémoire
 
  1. Armes de Mêlée + Projectiles (Mode Alternatif)
Concept :
Le joueur attaque en mêlée, mais lorsqu'il réussit un perfect parry, il gagne une charge d'arme qu'il peut tirer ensuite.

🔥 2. Ajout d’un Système de "Lien Spirituel"
Plutôt que de faire des projectiles classiques, le joueur peut marquer un ennemi en mêlée et lui envoyer une attaque à distance après coup.

Exemple de mécanique :

Attaque mêlée : Pose une marque sur l’ennemi.
Appuyer sur "Tir Spirituel" après un parry : La marque explose et fait des dégâts.
Si la marque explose sur un ennemi, il peut aussi ralentir les balles alentour.


Script :
RemnA.I.nt - Script du jeu
1. Introduction (Cinematic d’ouverture)
(Écran noir, bruit d’interface corrompue, texte qui apparaît lentement en blanc digitalisé)

Système en ligne...
Erreur : données manquantes.
Reconstruction de la mémoire...
Statut : Unité autonome - Déconnectée du réseau.

(On entend un bruit de réveil, une machine qui s’active, un ventilateur qui tourne.)

(L’écran s’illumine : Vue subjective d’une interface, affichant une silhouette en contre-jour.)

📌 Scène cinématique animée :

L’héroïne, Unit A-1N, se réveille au cœur d’une cité en ruine envahie par la nature.
Elle voit des bâtiments effondrés, des forêts qui ont repris leurs droits sur les rues.
Des lumières rouges s’allument au loin : des drones de sécurité corrompus s’activent et patrouillent.
Elle touche son torse : un symbole gravé dans son châssis brille faiblement (représente son lien avec son âme humaine).
2. Première interaction - Tutoriel
(Elle active son interface interne, une voix lui parle dans sa tête : une voix féminine, fragile, humaine.)

💬 Voix intérieure (IA/humaine en elle) :

"Où… où suis-je ? Qui… suis-je ?"
"Pourquoi… suis-je seule ?"

📌 Première mission : Se déplacer, scanner l’environnement.

Interface minimaliste, HUD affichant une carte endommagée.
Un drone ennemi apparaît, elle prend automatiquement une pose défensive.
Un ancien fichier de combat s’ouvre :
🎮 Tutoriel combat → Attaque, Esquive, Surcharge (pouvoir spécial).
Elle utilise son bras-canon intégré pour neutraliser le drone.
3. Histoire principale - Objectif du jeu
📜 Contexte :

L’humanité a presque disparu, balayée par une catastrophe inconnue.
La nature et une force magique étrange ont repris le monde.
Les machines de défense, comme elle, sont devenues hors de contrôle, sauf elle.
Les humains survivants se cachent, terrorisés par les robots.
Elle doit retrouver les survivants et leur redonner espoir, tout en découvrant la vérité sur son origine.
📌 Gameplay Roguelike :

Exploration procédurale → Chaque partie du monde est générée différemment.
Ennemis : Drones de sécurité corrompus, créatures mutantes nées de la magie.
Système d’amélioration : Récupérer des morceaux de mémoire pour débloquer des capacités.
4. Exemple de mission / Dialogue
🎮 Mission : Entrer dans un bunker humain abandonné
(Elle ouvre la porte d’un bunker, intérieur sombre, bruits de pas furtifs.)

💬 Héroïne - Unit A-1N :

"Analyse en cours… Traces d’activité récente. Humains détectés ?"

💬 Survivant (en tremblant, arme levée) :

"Recule ! Je sais ce que vous êtes ! Vous nous avez exterminés !"

💬 Héroïne - Unit A-1N :

"Erreur. Directive de défense prioritaire : Protection des civils. Je ne suis pas votre ennemie."

💬 Survivant :

"Comment je peux te faire confiance ? Les autres androïdes nous traquent !"

(À ce moment-là, choix du joueur : pacifier ou utiliser la force.)

🟢 Option diplomatique → "Mon objectif est de restaurer ce qui a été perdu."
🔴 Option intimidation → "Je suis la seule chance qu’il vous reste."

5. Progression et Fin du jeu
📌 Système de progression :

Chaque run permet de récupérer de la mémoire, débloquant des morceaux du passé.
À mesure qu’elle retrouve ses souvenirs, on découvre qui elle était avant (peut-être une humaine transférée dans ce corps mécanique).

////

#### Réflexion sur la thématique et la mécanique du jeu :
## Thème : Royaume médiéval plongé dans les ténèbres, ambiance sombre et mystérieuse.

## Mécaniques principales :
- Système de parry/perfect timing : Ralentissement du temps, fond noirci, possibilité de one-shot et propulsion en arrière.
- Capacité d'ombre : Invisibilité et invincibilité temporaire, débloquée après le tutoriel.
- Monnaie : Âmes errantes.

## Fonctionnalités du jeu
- Solo, 2D, Roguelite : Boss à la fin de chaque niveau.
- Vue du dessus : Mouvement libre.
- Gameplay chill : Moins de bullets et d'ennemis, ambiance sombre mais simple et propre.
- Améliorations au respawn : Progression basée sur les améliorations après chaque mort.

## Règles et utilisation
- Règles :
Le joueur doit naviguer à travers des donjons, affronter des créatures et vaincre des boss.
Utilisation stratégique des parries et de la capacité d'ombre.
- Utilisation :
Contrôles simples et intuitifs.
Interface utilisateur claire et minimaliste.
Fonctionnement détaillé de l’interface graphique

## Schémas au brouillon :
- Écran de jeu principal : Affichage de la santé, des âmes errantes, des capacités disponibles.
- Écran de pause : Options de sauvegarde, chargement, paramètres.
- Écran de respawn : Améliorations disponibles, statistiques du joueur.

## Lister les tâches à effectuer
- Développement :
Programmation des mécaniques de jeu (parry, capacité d'ombre, etc.).
Création des niveaux et des boss.
Conception de l'interface utilisateur.
- Graphismes :
Création des sprites et des animations.
Conception des décors et des effets visuels.
- Son :
Conception des effets sonores et de la musique d'ambiance.


## Identification des compétences individuelles
- Programmation : Qui est le plus à l'aise avec Pygame ?
- Graphismes : Qui a des compétences en dessin et en animation ?
- Son : Qui peut s'occuper des effets sonores et de la musique ?

## Répartition des tâches
 # Selon les compétences et les intérêts de chacun :
- Programmation : Développeur 1 et 2.
- Graphismes : Développeur 3.
- Son : Développeur 4.

## Présentation du jeu et de ses fonctionnalités
#Document de présentation :
Description du jeu, de son univers et de ses mécaniques.
Fonctionnalités principales et secondaires.
Interface utilisateur et contrôles.
Progrès réalisés et tâches restantes.
Rédaction du document de présentation

Contenu :
Ensemble des tâches effectuées.
Codes réalisés.
Historique de la réalisation du projet.
Problèmes rencontrés et solutions apportées.
Prolongements possibles.
Présentation individuelle du travail personnel

Chaque membre :
Décrire son rôle et ses contributions.
Expliquer les défis rencontrés et comment ils ont été surmontés.
Partager les leçons apprises et les compétences développées.


////


### Développeur 1 (Thomas) : Programmation des mécaniques de jeu
## Tâches :

Implémentation du système de parry/perfect timing.
Programmation de la capacité d'ombre.
Développement des mécaniques de mouvement libre.
Gestion des améliorations au respawn.
Intégration des éléments de progression (âmes errantes).

### Développeur 2 (Mathias) : Programmation des niveaux et des ennemis
## Tâches : qb

Création des donjons et des labyrinthes.
Programmation des comportements des ennemis.
Développement des boss et de leurs mécaniques.
Conception des systèmes de génération procédurale pour les niveaux.

### Développeur 3 (Eloi) : Graphismes et animations
## Tâches :

Conception des sprites des personnages et des ennemis.
Création des animations.
Conception des décors.
Réalisation des interfaces utilisateur (UI).
Creation du cinematic.py
Creation du game.py

### Développeur 4 (Sacha) : Son et musique
## Tâches :
Conception des effets sonores
Création de la musique d'ambiance.
Intégration des sons et de la musique dans le jeu.
Creation des Menu
Implementations des Mouvements du personnage
Implementations des Armes
Concept Art
