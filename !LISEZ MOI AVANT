main.py # Point d'entr√© principal
game.py # Logique principal du jeu
menu.py # Getsion du menu principal et des parametres 
cinematic.py # Gestion des cin√©matiques
tutorial.py # Tutoriel interactif avec le compagnon
save_manager.py # Gestion des sauvegardes
player.py # Classe du joueur
companion.py # Classe du compagnon
enemy.py # Classe des ennemies
map.py # Generation procedurale des donjons
ui.py # Interactif utilisateur (HUD)





////

- Jeu Solo
- 2D
- Roguelite (donc boss a la fin)
- Vue du dessus
- Simple mais propre / Ambiance sombre
- Chill gameplay pas trop de bullet/ennemies
- Ameliorations au respawn
- Medieval / Fantasique en interieur
- Mouvement libre
- Bullet game all√©g√©

- System de (parry)/Perfect timing sur une attaque m√©l√©e sur un ennemie, 
le jeu se ralentie (ou s'arrette) et le fond se noirci, le system permet de one shot
et quand on one shot on se fait "propulser" en arriere a la fin et si on rate on se prend
un degat de l'ennemie (Le system est assez rapide en soit pour perfect)

- Une ability de base ou tu peut te mettre en ombre tu peux pas te faire voir/te faire toucher // On le d√©bloque apres le tuto

- La monnaie c'est les √¢mes √©rantes
 
  1. Armes de M√™l√©e + Projectiles Spirituels (Mode Alternatif)
Concept :
Le joueur attaque en m√™l√©e, mais lorsqu'il r√©ussit un perfect parry, il gagne une charge de projectile spirituel qu'il peut tirer ensuite.

üî• 2. Ajout d‚Äôun Syst√®me de "Lien Spirituel"
Plut√¥t que de faire des projectiles classiques, le joueur peut marquer un ennemi en m√™l√©e et lui envoyer une attaque √† distance apr√®s coup.

Exemple de m√©canique :

Attaque m√™l√©e : Pose une marque sur l‚Äôennemi.
Appuyer sur "Tir Spirituel" apr√®s un parry : La marque explose et fait des d√©g√¢ts.
Si la marque explose sur un ennemi, il peut aussi ralentir les balles alentour.


Script :
Dans un royaume m√©di√©val plong√© dans les t√©n√®bres,  
Un h√©ros, connu sous le nom de ‚ÄúL‚ÄôOmbre‚Äù, c'est sacrifi√© en utilisant le parchemin sacr√©
dans le but de sauv√© l'humanit√©. Cependant son √¢me fu supprimer en contre partie de l'utilisation
de cette arme divine. Le dieu Had√®s d√©cida de r√©cup√©r√© ce qui restait de l'√¢me de ce mortel
√©tant int√©r√©ss√© par son pouvoir pour nettoyer le royaume des morts des √¢mes √©rantes
celui ci doit naviguer √† travers des donjons myst√©rieux et labyrinthiques, affronter des cr√©atures fantastiques 
et vaincre des boss redoutables pour accomplir sa mission qu'il ne peut refuser √©tant dicter/diriger.

////

#### R√©flexion sur la th√©matique et la m√©canique du jeu :
## Th√®me : Royaume m√©di√©val plong√© dans les t√©n√®bres, ambiance sombre et myst√©rieuse.

## M√©caniques principales :
- Syst√®me de parry/perfect timing : Ralentissement du temps, fond noirci, possibilit√© de one-shot et propulsion en arri√®re.
- Capacit√© d'ombre : Invisibilit√© et invincibilit√© temporaire, d√©bloqu√©e apr√®s le tutoriel.
- Monnaie : √Çmes errantes.

## Fonctionnalit√©s du jeu
- Solo, 2D, Roguelite : Boss √† la fin de chaque niveau.
- Vue du dessus : Mouvement libre.
- Gameplay chill : Moins de bullets et d'ennemis, ambiance sombre mais simple et propre.
- Am√©liorations au respawn : Progression bas√©e sur les am√©liorations apr√®s chaque mort.

## R√®gles et utilisation
- R√®gles :
Le joueur doit naviguer √† travers des donjons, affronter des cr√©atures et vaincre des boss.
Utilisation strat√©gique des parries et de la capacit√© d'ombre.
- Utilisation :
Contr√¥les simples et intuitifs.
Interface utilisateur claire et minimaliste.
Fonctionnement d√©taill√© de l‚Äôinterface graphique

## Sch√©mas au brouillon :
- √âcran de jeu principal : Affichage de la sant√©, des √¢mes errantes, des capacit√©s disponibles.
- √âcran de pause : Options de sauvegarde, chargement, param√®tres.
- √âcran de respawn : Am√©liorations disponibles, statistiques du joueur.

## Lister les t√¢ches √† effectuer
- D√©veloppement :
Programmation des m√©caniques de jeu (parry, capacit√© d'ombre, etc.).
Cr√©ation des niveaux et des boss.
Conception de l'interface utilisateur.
- Graphismes :
Cr√©ation des sprites et des animations.
Conception des d√©cors et des effets visuels.
- Son :
Conception des effets sonores et de la musique d'ambiance.


## Identification des comp√©tences individuelles
- Programmation : Qui est le plus √† l'aise avec Pygame ?
- Graphismes : Qui a des comp√©tences en dessin et en animation ?
- Son : Qui peut s'occuper des effets sonores et de la musique ?

## R√©partition des t√¢ches
 # Selon les comp√©tences et les int√©r√™ts de chacun :
- Programmation : D√©veloppeur 1 et 2.
- Graphismes : D√©veloppeur 3.
- Son : D√©veloppeur 4.

## Pr√©sentation du jeu et de ses fonctionnalit√©s
#Document de pr√©sentation :
Description du jeu, de son univers et de ses m√©caniques.
Fonctionnalit√©s principales et secondaires.
Interface utilisateur et contr√¥les.
Progr√®s r√©alis√©s et t√¢ches restantes.
R√©daction du document de pr√©sentation

Contenu :
Ensemble des t√¢ches effectu√©es.
Codes r√©alis√©s.
Historique de la r√©alisation du projet.
Probl√®mes rencontr√©s et solutions apport√©es.
Prolongements possibles.
Pr√©sentation individuelle du travail personnel

Chaque membre :
D√©crire son r√¥le et ses contributions.
Expliquer les d√©fis rencontr√©s et comment ils ont √©t√© surmont√©s.
Partager les le√ßons apprises et les comp√©tences d√©velopp√©es.


////


### D√©veloppeur 1 (Thomas) : Programmation des m√©caniques de jeu
## T√¢ches :

Impl√©mentation du syst√®me de parry/perfect timing.
Programmation de la capacit√© d'ombre.
D√©veloppement des m√©caniques de mouvement libre.
Gestion des am√©liorations au respawn.
Int√©gration des √©l√©ments de progression (√¢mes errantes).

### D√©veloppeur 2 (Mathias) : Programmation des niveaux et des ennemis
## T√¢ches : qb

Cr√©ation des donjons et des labyrinthes.
Programmation des comportements des ennemis.
D√©veloppement des boss et de leurs m√©caniques.
Conception des syst√®mes de g√©n√©ration proc√©durale pour les niveaux.

### D√©veloppeur 3 (Eloi) : Graphismes et animations
## T√¢ches :

Conception des sprites des personnages et des ennemis.
Cr√©ation des animations (mouvements, attaques, parry, etc.).
Conception des d√©cors et des effets visuels.
R√©alisation des interfaces utilisateur (UI).
Cr√©ation des assets graphiques pour les menus et les √©crans de jeu.

### D√©veloppeur 4 (Sacha) : Son et musique
## T√¢ches :
Conception des effets sonores (attaques, parry, capacit√©s, etc.).
Cr√©ation de la musique d'ambiance.
Int√©gration des sons et de la musique dans le jeu.
Ajustement des niveaux sonores pour une exp√©rience immersive.